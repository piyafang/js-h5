border-radius:x/y
box-shadow:[inset] x y blur [extend] color
text-shadow:x y blur color
linear
radial
rgba――任何地方
transform:
	rotate
	scale
	skew
	translate

---------------------------------------------------------------------------------------

1.浏览器自带的性能高――transition
2.css3样式――性能高

---------------------------------------------------------------------------------------

transition――	简单、很多
animation――	复杂、几乎没人用

//定义
@-webkit-keyframes 名字
{
	动画内容
	写法1.
		[from {}]
		to {}

	写法2.
		百分比

		from 等价于 0% {}
		to 等价于 100% {}
}

//调用
animation-name:名字;
animation-duration:时间;
animation-timing-function:形式;

---------------------------------------------------------------------------------------

animation缺点：
1.不灵活――没法用JS改
2.写着麻烦

---------------------------------------------------------------------------------------

animation-delay			――开始时间延迟
animation-iteration-count	――次数		infinite(无穷)
animation-direction		――方向
	不给-每次从"起点->终点"
	alternate-第2次反着走
animation-fill-mode		――终点处理
	不给-回到起点
	forwards-留在终点
animation-play-state		――用来暂停
	不给-运行
	paused-停下来

---------------------------------------------------------------------------------------

iteration――迭代

循环、迭代、遍历

循环(也能跳着走) vs 遍历(每一个都照顾到)
循环(没有顺序) vs 迭代(顺序)

---------------------------------------------------------------------------------------

linear-gradient
radial-gradient

linear-repeat-gradient

---------------------------------------------------------------------------------------

transform――

translate(x, y)
	translateX(...)
	translateY(...)

scale(x, y)
	scaleX(...)
	scaleY(...)

skew(x, y)
	skewX(...)
	skewY(...)

---------------------------------------------------------------------------------------

rotate==rotateZ
rotateX()
rotateY()
rotateZ()

---------------------------------------------------------------------------------------

transform永远加上初始值

---------------------------------------------------------------------------------------

translate=translateX+Y
scale=scaleX+Y
skew=skewX+Y
rotate=rotateZ

---------------------------------------------------------------------------------------

perspective――	越大-越没有3D感觉
		越小-3D越明显

不加perspective――perspective(无限)

---------------------------------------------------------------------------------------

ontransitionend

---------------------------------------------------------------------------------------

HTML5中新添加的事件，都得绑定
	*DOM3的事件，都得绑定
	DOM3事件：DOMContentLoaded

---------------------------------------------------------------------------------------

transform:
1.越靠后，越先执行
2.3D――景深(越大-越不明显，越小-越明显)
3.坐标轴――面对坐标轴，顺时针是正的

---------------------------------------------------------------------------------------

两面

preserve――保留、预留

flat――平的

transform-style:flat		父级会限制子级――子级飘不出去
transform-style:preserve-3d	父级不限制――子级随便飘















