笔记
==============================
正则 		
操作字符串
*正则就是操作字符串。可以不用正则。――用正则为了方便
==============================
正则表达式
---------------------------------
规则表达式

正则	规则

itwenqiang@sina.com
张三
北京市 朝阳区 建外SOHO东区 7号商铺
13718079028

var oDate =new Date();
var oImg = new Image();
var arr = new Array();

new RegExp('规则');
Regular Expression
search		搜索，查找


new RegExp('规则','选项');

i 		Ignore 		忽略大小写


var arr = [];
var arr =new Array();
function show(){}
var show = new Function(){};


正则也有简写
/规则/选项

\			转义
\n			换行

\\		代表了\
\\\\		代表了\\

\d 		所有的数字


正则特性:
1.懒
	g	global 	全局匹配所有
2.笨
	**量词
	10个苹果 	苹果{10}
	+ 	最少一个，最多不限

	+和g完全是两个东西，谁也不能代替谁。
3.贪婪


replace 	离开了正则就是废物。
replace(字符串|正则,字符串);

||		或
/裸|约/g		正则中  |  就是或

replace(字符串|正则,字符串|函数);

修饰
^ 		行首
$ 		行尾

/规则/mg 		多个选项可以直接写

选项	m 	muti-line 		多行模式
单行模式 	
^ 		整个字符串的开头
$ 		整个字符串的结尾
多行模式
^ 		当前这一行的开头
$		当前这一行的结尾

选项
i		ignore 	忽略大小写
m 		muti-line	多行模式
g 		global 	全局匹配

正则	量词
{n}		n个
{n,m}		最少n个，最多m个
{n,} 		最少n个，最多不限
{0,1}		最少0个，最多1个 	有或没有
{0,}		最少0个，最多不限
{1,}		最少1个，最多不限
? 	{0,1}	最少0个，最多1个
+ 	{1,}	最少1个，最多不限
* 	{0,}	最少0个，最多不限	【不推荐用】

正则 	[]
-----------------------------------------
1.或
/a[abc]c/
aac
abc
acc
aabcc 	×
2.范围
[0-9]		0到9
[a-z]		a到z
[A-Z]		A到Z
[a-zA-Z]	a到z或A-Z
[a-zA-Z0-9]	a到z或A-Z或数字

[18]		1或8
[12-89]	1或2到8或9
[18-902] 	1或8-9或0或2

3.排除
[^a-z]		除了a到z
[^0-9]		除了数字
[^a-zA-Z0-9]	除了英文字母和数字

[a-z^0-9]	×

转义
\d 		数字
\w		包括数字字母_
\s 		所有的空白	空格 tab 换行

\D		除了数字
\W 		除了数字字母_
\S		除了空白

. 		所有东西


search 		查找
str.search(re);
match 			匹配
str.match(re);
test 			检测，测试，验证
re.test(str);

校验座机号
5676544
010-5676544
0454-23456754
写正则要分段

座机		号码
(\d{3,4}\-)? 	\d{7,8}
test 	本身有问题。不严谨
	以后使用test必须加^$
(0[1-9]\d{1,2}\-)?\d{7,8}
/^(0[1-9]\d{1,2}\-)?[1-9]\d{6,7}$/


校验邮箱
itwenqiang@sina.com
名字		@ 	域名		域名后缀
(\w)+@[a-zA-Z0-9\-]+(\.[a-zA-Z]{2,6}){1,2}


校验年龄
18-100

			18-19
1[89]
			20-99
[2-9]\d
			100
100
用或就要用()
/^((1[89])|([2-9]\d)|(100))$/


作业：
ajax写完
jsonp写完
正则写完

用jsonp写webQQ


















