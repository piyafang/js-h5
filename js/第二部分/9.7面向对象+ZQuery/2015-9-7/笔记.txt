面向对象？
不需要知道怎么来的，只知道怎么用

this？
1.看调用
2.优先级？
其他
方法
事件
定时器
new

3.只管一层

prototype？
加东西

Array.prototype.a=xxx;

arr1
arr2
arr3

---------------------------------------------------------------------------------------

CSS继承：父级加个样式，子级也有

JS继承：父类有什么，子类也会有
	给父类加个东西，子类也会有

作用域链
原型链――先找自己，再找父级，父级的父级，.......，最后找Object

---------------------------------------------------------------------------------------

instance of
实例	 的

xxx是不是?的实例

类		
对象(实例)	

new Date()

---------------------------------------------------------------------------------------

instanceof――既能检测子类，也能检测父类
		子类的实例，也是父类的

constructor――构造函数(构造器)
		只能检测子类，不能检测父类

---------------------------------------------------------------------------------------

instanceof	父类、子类
constructor	子类

---------------------------------------------------------------------------------------

JS很恶心
1.奇怪的父级――Object和Function的关系
2.包装类型

---------------------------------------------------------------------------------------

json的应用：
1.写对象的另一种方法
	构造函数+原型	复杂、重用		适合有很多的
	json直接来	简单、一个		适合只有一个的
2.加原型――不推荐

{}.constructor			=>	Object

Person.prototype={}
Person.prototype.constructor	=>	Object

p1.constructor			=>	Object

3.命名空间

var json={};

json.a={};
json.b={};

json.a.show=function xxx;
json.b.show=function xxx;

命名空间

---------------------------------------------------------------------------------------

命名冲突：
1.封闭空间		√	简单
2.命名空间		过时	弱
3.模块化(seaJS)		√	强大：避免冲突、自动解决依赖、动态加载
4.面向对象		不实用	麻烦

面向对象――前端用的很少
		游戏(复杂的)――用的多

---------------------------------------------------------------------------------------

自己写一个jQuery：
1.了解原理
2.课程总结
3.一个库是怎么写的

ZQuery

---------------------------------------------------------------------------------------

$('xxx')	选择
$(oDiv)		包装
$(function)	ready

---------------------------------------------------------------------------------------

$('#div1 ul li.box:first')

选择器――前一次的结果，就是下一次的父级


var arr=[];

arr.push([1,2,3]);
arr.push([4,5,6]);

arr=>[[1,2,3], [4,5,6]]

---------------------------------------------------------------------------------------

#div1
.box
div

-------------

li.box
li#li1
input[type=button]
li:first	li:eq(10)

input[value=3.5]

<h2>

属性名：value、a2、a_3、姓名

input[value=qq]

---------------------------------------------------------------------------------------

$(?)
ZQuery(function)
ZQuery('xcvsad')
ZQuery(oDiv)

---------------------------------------------------------------------------------------

$('div').css('background', 'red');
$('div');

---------------------------------------------------------------------------------------

$('#btn1').click(function (){});

---------------------------------------------------------------------------------------

属性的作用――在对象的内部，共享东西
		全局不行――影响别人
		属性――对外面没有影响，对内部又可以用
		局部不行――用不了

---------------------------------------------------------------------------------------

$(xxx).css('width', '400px');		设置
$(xxx).css('width');			获取
$(xxx).css({width: xxx, height: xxx});	批量

$(xxx).hover(function (){}, function (){});

---------------------------------------------------------------------------------------

mouseover――from是不是自己的

---------------------------------------------------------------------------------------

$(xxx).hover(fn1, fn2);


$(xxx).mouseenter(fn1);
$(xxx).mouseleave(fn2);

---------------------------------------------------------------------------------------

$('#div1').xxx;

var oDiv=document.getElementById('div1');
$(oDiv).xxx;

$(this).css('xxxxx');

---------------------------------------------------------------------------------------

ajax：
readyState	通信状态变化
status		服务返回的状态

ready：
readyState

---------------------------------------------------------------------------------------

事件绑定：
attachEvent		会把this弄乱了
addEventListener	return false废了
			preventDefault()

---------------------------------------------------------------------------------------

call――给this赋值
	call(<this>, 参数, 参数...)

call(this, xx, xx, xx, ...)
apply(this, [xx, xx])

---------------------------------------------------------------------------------------

oBtn.onclick=show();
setInterval(function (){
	show();
}, 100);
oBtn.addEventListener('click', show(), false);

---------------------------------------------------------------------------------------

$(xxx).click(function (ev){
	ev.xxx;
});

---------------------------------------------------------------------------------------

$(xxx).attr('value', 'abc');
$(xxx).attr('value');
$(xxx).attr({xx, xxx});

---------------------------------------------------------------------------------------

3个函数
点击	%3	函数
0	0	0
1	1	1
2	2	2
3	0	0
4	1	1
5	2	2
6	0	0














