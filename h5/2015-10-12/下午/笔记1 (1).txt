总结：
1.viewport
2.rem――所有单位都得是rem(不能有px)

---------------------------------------------------------------------------------------

盒模型――物体占的空间
	block、inline、inline-block
	*第四种？

响应式布局(设计)――PC、pad、手机
		   1280、1024、320

---------------------------------------------------------------------------------------

盒模型
1.box-sizing
	content-box		内容尺寸
	border-box		边框尺寸

	作用：浮动特别好使

2.弹性布局
启用弹性布局――
1.父级		display:-webkit-box;	兼容问题
2.子级		-webkit-box-flex:1;	比例

webkit(老版)：
display:-webkit-box;
-webkit-box-flex:1;

webkit/moz：
display:flex;
flex:1;

---------------------------------------------------------------------------------------

总结：
弹性布局――
display:flex;
flex:1;

弹性布局好在哪儿
1.增减内容不用管
2.代替box-sizing――随便修改padding、boder，不会挤下去(抢内容的空间)

---------------------------------------------------------------------------------------

flex可以跟max/min-width

---------------------------------------------------------------------------------------

flex――把东西放在一排(跟float相似)
	好用：自动计算空间、border和padding不会挤下去

---------------------------------------------------------------------------------------

flex和rem――没任何关系、经常一块儿

---------------------------------------------------------------------------------------

响应式布局(设计)：
媒体查询

---------------------------------------------------------------------------------------

“媒体查询”和“if”很像

if()
{
}

@media(条件)
{
	CSS代码
}

max-width:500px		相当于“小于500px”
	“当前的样式，能起作用的最大范围”

---------------------------------------------------------------------------------------

总结：
1.media――相当于if
2.格式
	@media(条件)
	{
		CSS样式
	}
3.顺序很重要――样式覆盖

	*CSS里，@有定义的意思

---------------------------------------------------------------------------------------

不靠谱：
1.分辨率混乱
	写一堆
	分辨率重叠
2.内容不一样――浪费大量流量

结论：没人用了，太麻烦了

怎么办――靠后台判断，干脆做3套

---------------------------------------------------------------------------------------

media两种：
1.<style>里面的
	丰富

2.<link>里面的
	显示的设备――打印机、屏幕、助听器

---------------------------------------------------------------------------------------

移动端布局：
1.跟PC端――差不多
2.3种方法――定宽(废了)、百分比(麻烦)、rem(重点)
	rem――除一下
	*设计图2倍
3.盒模型――
	flex：增减东西、挤不下去
	box-sizing

*移动端布局――rem+flex

/*
媒体查询：
1.style用法
@media (条件)
{CSS代码}

2.link用法
<link xxx media="设备" />
*/

---------------------------------------------------------------------------------------

触屏事件――代替鼠标

PC端		手机
onmousedown	ontouchstart
onmousemove	ontouchmove
onmouseup	ontouchend

---------------------------------------------------------------------------------------

拖拽：
1.位置
	过去：	ev.pageX			1个
	现在：	ev.targetTouches[].pageX	多个

2.move、end
	过去：	document.onmousemove/up
	现在：	oDiv.ontouchmove/end

---------------------------------------------------------------------------------------

touch事件：
1.绑定		HTML5新的事件――都绑定
2.touchstart/move/end
3.位置
	ev.targetTouches[0].pageX
4.move、end――oDiv、document
5.start的时候――preventDefault

---------------------------------------------------------------------------------------

新浪云：
1.进去		sae.sina.com.cn
















