CSS3――蒙版：
1.图片	-webkit-mask:url(xxx);
2.渐变	-webkit-mask:-webkit-linear-gradient(xxx);
3.文字	-webkit-background-clip:text;

---------------------------------------------------------------------------------------

localStorage――onstorage

1.sessionStorage没用――不能同步、没有事件
2.必须绑定、window&document

---------------------------------------------------------------------------------------

文件拖拽：
1.拖
ondragenter/leave
ondrop			核心
ondragover――悬停

2.读文件
FILE对象
ev.dataTransfer.files

	.name
	.size
	.type

FileReader对象

	reader.onload=function

	reader.readAsText	文本
	reader.readAsDataURL	任何

base64――编码
	任何出现文件名的地方，都能直接用base64

---------------------------------------------------------------------------------------

video――视频

controls――显示自带的播放控件(不能自定义)

---------------------------------------------------------------------------------------

<video src="xxx">
	<object xxxx/>
</video>

---------------------------------------------------------------------------------------

controls
loop		循环播放
autoplay

---------------------------------------------------------------------------------------

不同浏览器支持格式不一样

结论：用mp4就行
Chrome		ogg、mp4、WebM
IE9+		mp4
FF		mp4、WebM

---------------------------------------------------------------------------------------

检测某一个格式，video是否支持
oV.canPlayType('xxx/xxx')
	maybe	――可以
	''	――不行

---------------------------------------------------------------------------------------

方法：
.play()		播放
.pause()	暂停

属性：
.currentTime	当前播放时间――单位：s

---------------------------------------------------------------------------------------

muted		boolean	――静音
volume		0-1	――音量

---------------------------------------------------------------------------------------

video自定义

---------------------------------------------------------------------------------------

video
1.格式
	通用格式――mp4
	检测支持――canPlayType('xxx/xxx')
		maybe――行

2.属性
	controls	自带控件
	loop		循环播放
	autoplay	自动播放

3.用JS操作
	.play()
	.pause()

	.ontimeupdate=function		播放时间变化

	.currentTime	当前播放时间
	.duration	总时长

	.muted		静音
	.volume		音量

---------------------------------------------------------------------------------------

transition	简单、方便、灵活		一次
animation	麻烦、复杂、不灵活	动画队列

---------------------------------------------------------------------------------------

transition动画队列

---------------------------------------------------------------------------------------

作用运动：
1.JS		性能低、灵活、复杂
2.transition	性能高、灵活、简单
3.animation	性能高、不灵活、复杂

JS+transition

---------------------------------------------------------------------------------------

CSS2样式――3、40种
'width'		obj.style.width

CSS3样式――2、3种
'transform'	obj.style.WebkitTransform
		obj.style.MozTransform
		obj.style.msTrasform


需要加前缀的、数值的样式：
transform

---------------------------------------------------------------------------------------

移动开发：布局、适配、事件、多点、...
图形：canvas、SVG/VML、...
webAPP：功能(摄像头、重力感应、网络监测...)、打包、发布

---------------------------------------------------------------------------------------

回顾：
1.HTML5
	新标签――header、article、section...(移动布局)
	新选择器――document.querySelector[All]
	localStorage
	拖拽――读文件&上传
		ondragenter/leave
		ondragover	return false
		ondrop
		FileReader

	video――属性、用JS控制

2.CSS3
基础
borderRadius:1 2 3 4	x/y
box-shadow:[inset] x y blur [extend] color
text-shadow:x y blur color
渐变――linear、radial
mask
	-webkit-mask:url(xx);
	-webkit-mask:-webkit-linear-gradient(x, x);
	-webkit-background-clip:text

有难度
	transform:	rotate	translate	scale	skew
	顺序有意义――越靠后先执行

	3D――	perspective		产生3D感觉――视觉		父级
		transform-style		让子元素飘出来――真的有用	父级

	translateZ

渐变+rgba
mask+渐变
渐变+文字遮罩+rgba

---------------------------------------------------------------------------------------

小图标(16*16、32*32、8*8)――用base64：减少请求

大图片――没有用base64的

base64编码以后――会变大

---------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------














